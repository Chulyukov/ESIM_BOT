from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton
from core.helpful_methods import (
    get_plan_prices, build_keyboard, prepare_payment_order, choose_direction
)
from db.db_queries import db_get_20_countries, db_update_data_country, db_get_regions

router = Router()

# –û–±—â–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
SUPPORT_LINK = "[—Å–ª—É–∂–±–æ–π –∑–∞–±–æ—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞](https://t.me/esim_unity_support)"
COMMON_TEXT = (
    "üÜò –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-–ª–∏–±–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ "
    f"{SUPPORT_LINK}."
)


# –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
@router.callback_query(F.data == "buy_esim")
@router.message(Command("buy_esim"))
async def buy_esim(msg: Message | CallbackQuery):
    await choose_direction(msg)


@router.callback_query(F.data == "popular_directions")
async def choose_popular_direction(callback: CallbackQuery):
    popular_countries = [
        ("üáπüá∑ –¢—É—Ä—Ü–∏—è", "choose_plan_rub_turkey"),
        ("üáπüá≠ –¢–∞–π–ª–∞–Ω–¥", "choose_plan_rub_thailand"),
        ("üá¶üá™ –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –ê—Ä–∞–±—Å–∫–∏–µ –≠–º–∏—Ä–∞—Ç—ã", "choose_plan_rub_united_arab_emirates"),
        ("üá™üá¨ –ï–≥–∏–ø–µ—Ç", "choose_plan_rub_egypt"),
        ("üá¨üá∑ –ì—Ä–µ—Ü–∏—è", "choose_plan_rub_greece"),
        ("üáªüá≥ –í—å–µ—Ç–Ω–∞–º", "choose_plan_rub_vietnam"),
        ("üá™üá∏ –ò—Å–ø–∞–Ω–∏—è", "choose_plan_rub_spain"),
        ("üáÆüá© –ò–Ω–¥–æ–Ω–µ–∑–∏—è", "choose_plan_rub_indonesia"),
        ("üá®üá≥ –ö–∏—Ç–∞–π", "choose_plan_rub_china"),
        ("üá®üáæ –ö–∏–ø—Ä", "choose_plan_rub_cyprus"),
    ]

    buttons = [
        InlineKeyboardButton(text=text, callback_data=data) for text, data in popular_countries
    ]
    buttons.append(InlineKeyboardButton(text="‚è™ –ö –≤—ã–±–æ—Ä—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π", callback_data="buy_esim"))
    kb = build_keyboard(buttons, layout=(2, 2, 2, 2, 2, 1))

    await callback.message.edit_text(
        text=f"{COMMON_TEXT}\n\n*üëá –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.*",
        reply_markup=kb,
        disable_web_page_preview=True,
    )


@router.callback_query(F.data.startswith("countries_"))
async def choose_concrete_direction(callback: CallbackQuery):
    pages_to_skip = int(callback.data.split("_")[-1])
    countries = db_get_20_countries(pages_to_skip)
    next_countries = db_get_20_countries(pages_to_skip + 1)

    buttons = [
        InlineKeyboardButton(
            text=f"{emoji} {ru_name.title()}",
            callback_data=f"choose_plan_rub_{name.replace(' ', '_')}"
        )
        for name, ru_name, emoji in countries
    ]

    navigation_buttons = []
    if pages_to_skip > 0:
        navigation_buttons.append(InlineKeyboardButton(text="‚èÆÔ∏è –ù–∞–∑–∞–¥", callback_data=f"countries_{pages_to_skip - 1}"))
    if next_countries:
        navigation_buttons.append(InlineKeyboardButton(text="‚è≠Ô∏è –î–∞–ª—å—à–µ", callback_data=f"countries_{pages_to_skip + 1}"))
    navigation_buttons.append(InlineKeyboardButton(text="‚è™ –ö –≤—ã–±–æ—Ä—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π", callback_data="buy_esim"))
    buttons.extend(navigation_buttons)

    kb = build_keyboard(buttons, layout=(2,) * len(buttons[:-len(navigation_buttons)]) + (len(navigation_buttons),))
    await callback.message.edit_text(
        text=f"{COMMON_TEXT}\n\n*üëá –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É.*",
        reply_markup=kb,
        disable_web_page_preview=True,
    )


@router.callback_query(F.data == "regions")
async def choose_region(callback: CallbackQuery):
    regions = db_get_regions()
    buttons = [
        InlineKeyboardButton(
            text=f"{emoji} {ru_name.title()}",
            callback_data=f"choose_plan_rub_{name.replace(' ', '_')}"
        )
        for name, ru_name, emoji in regions
    ]
    buttons.append(InlineKeyboardButton(text="‚è™ –ö –≤—ã–±–æ—Ä—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π", callback_data="buy_esim"))
    kb = build_keyboard(buttons, layout=(1,))

    await callback.message.edit_text(
        text=(
            "*üåç –£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫–∏–µ —Å—Ç—Ä–∞–Ω—ã –≤—Ö–æ–¥—è—Ç –≤ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ eSIM.*"
            "\n–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –Ω–∞ —Å–≤—è–∑–∏ –≤ —Ä–∞–∑–Ω—ã—Ö —á–∞—Å—Ç—è—Ö –º–∏—Ä–∞ –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π!"
            "\n\n*üì± –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –Ω–∞—à–µ–π —Å—Ç–∞—Ç—å–µ –ø–æ —Å—Å—ã–ª–∫–µ:*"
            "\n[–ü–∞–∫–µ—Ç—ã eSIM –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤: –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã](https://telegra.ph/Pakety-eSIM-dlya-raznyh-regionov-dostupnye-strany-10-06)"
            f"\n\n{COMMON_TEXT}"
            "\n\n*‚úàÔ∏è –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ —Å—Ç—Ä–∞–Ω–∞–º–∏ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ª—É—á—à–∏–π –ø–∞–∫–µ—Ç –¥–ª—è –≤–∞—à–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è!*"
        ),
        reply_markup=kb,
        disable_web_page_preview=True,
    )


@router.callback_query(F.data == "search")
async def search(callback: CallbackQuery):
    await callback.message.answer(
        "‚å®Ô∏è –í –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ –≤–∞—Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
    )


@router.callback_query(F.data.startswith("choose_plan_rub_"))
async def choose_plan_rub(callback: CallbackQuery):
    country = callback.data.split("choose_plan_rub_")[1]
    db_update_data_country(callback.message.chat.id, country.replace("_", " "))
    prices = get_plan_prices("RUB", callback.message.chat.id)

    buttons = [
        InlineKeyboardButton(text=f"{gb} –ì–ë - {price} RUB", callback_data=f"pay_rub_{gb}")
        for gb, price in prices.items()
    ]
    buttons.append(InlineKeyboardButton(text="‚è™ –ö –≤—ã–±–æ—Ä—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π", callback_data="buy_esim"))
    kb = build_keyboard(buttons, layout=(2, 2, 1))

    await callback.message.edit_text(
        text=(
            "üí≥ –û–ø–ª–∞—á–∏–≤–∞—è —Ä–æ—Å—Å–∏–π—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å"
            " [—É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞](https://telegra.ph/Kak-proishodit-oplata-v-bote-09-05)."
            f"\n\n{COMMON_TEXT}"
            "\n\n*üëá –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø–∞–∫–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞.*"
        ),
        reply_markup=kb,
        disable_web_page_preview=True,
    )


@router.callback_query(F.data.startswith("pay_rub_"))
async def pay_rub(callback: CallbackQuery):
    await prepare_payment_order(callback, "RUB")