from datetime import datetime

from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from core.helpful_methods import buy_esim_service, get_username
from db.db_start import db_check_user_exist, db_add_user

router = Router()


@router.message(CommandStart)
async def start_command(message: Message, state: FSMContext):
    """/start"""
    await state.clear()

    is_user_exist = db_check_user_exist(str(message.chat.id))
    if not is_user_exist:
        username = get_username(message)
        db_add_user(str(message.chat.id), username, datetime.now())
        await buy_esim_service(message)
    else:
        await message.answer("üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å esim!*"
                             "\n\nüì∂ –≠—Ç–æ—Ç –±–æ—Ç –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –≤—ã–¥–∞—á–µ–π esim —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω, —á—Ç–æ–±—ã —É –≤–∞—Å"
                             " –±—ã–ª–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–π—Ç–∏ –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –∏–∑ –ª—é–±–æ–π —Ç–æ—á–∫–∏ –º–∏—Ä–∞ (—Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω –ø–æ–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω, –Ω–æ –º—ã"
                             " –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –µ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º üòâ).\n\n–ù–∞–∂–º–∏—Ç–µ /menu, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ"
                             " –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞.")
